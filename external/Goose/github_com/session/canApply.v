(* autogenerated from command-line-arguments *)
From Perennial.goose_lang Require Import prelude.

Section code.
Context `{ext_ty: ext_types}.

Definition oneOffVersionVector: val :=
  rec: "oneOffVersionVector" "serverId" "v1" "v2" :=
    let: "output" := ref_to boolT #true in
    let: "canApply" := ref_to boolT #true in
    let: "i" := ref_to uint64T #0 in
    let: "l" := ref_to uint64T (slice.len "v1") in
    Skip;;
    (for: (λ: <>, (![uint64T] "i") < (![uint64T] "l")); (λ: <>, Skip) := λ: <>,
      (if: (![uint64T] "i") = "serverId"
      then
        "i" <-[uint64T] ((![uint64T] "i") + #1);;
        Continue
      else
        (if: (![boolT] "canApply") && (((SliceGet uint64T "v1" (![uint64T] "i")) + #1) = (SliceGet uint64T "v2" (![uint64T] "i")))
        then
          "canApply" <-[boolT] #false;;
          "i" <-[uint64T] ((![uint64T] "i") + #1);;
          Continue
        else
          (if: (SliceGet uint64T "v1" (![uint64T] "i")) < (SliceGet uint64T "v2" (![uint64T] "i"))
          then
            "output" <-[boolT] #false;;
            Continue
          else Continue))));;
    ![boolT] "output".

End code.
